<link rel="stylesheet" href="/your-business.css">

<div class="business-profile-free-listing"> 
    <h1>Free Listing</h1>
    <section class="dial-section">
    
    <div class="dial-container">
        <div class="dial">
            <svg viewBox="0 0 100 100">
                <circle class="dial-bg" cx="50" cy="50" r="45" />
                <circle class="dial-progress" cx="50" cy="50" r="45" id="days-dial" />
            </svg>
            <span class="dial-value" id="days-value">180</span>
            <span class="dial-label">Days</span>
        </div>
        <div class="dial">
            <svg viewBox="0 0 100 100">
                <circle class="dial-bg" cx="50" cy="50" r="45" />
                <circle class="dial-progress" cx="50" cy="50" r="45" id="hours-dial" />
            </svg>
            <span class="dial-value" id="hours-value">23</span>
            <span class="dial-label">Hours</span>
        </div>
        <div class="dial">
            <svg viewBox="0 0 100 100">
                <circle class="dial-bg" cx="50" cy="50" r="45" />
                <circle class="dial-progress" cx="50" cy="50" r="45" id="minutes-dial" />
            </svg>
            <span class="dial-value" id="minutes-value">59</span>
            <span class="dial-label">Minutes</span>
        </div>
        <div class="dial">
            <svg viewBox="0 0 100 100">
                <circle class="dial-bg" cx="50" cy="50" r="45" />
                <circle class="dial-progress" cx="50" cy="50" r="45" id="seconds-dial" />
            </svg>
            <span class="dial-value" id="seconds-value">59</span>
            <span class="dial-label">Seconds</span>
        </div>
    </div>
</section></div>

<section class="business-listing-section">
    <div class="business-listing-container">
        <header class="business-listing-header">
            <h2 class="business-listing-title">Your Listed Businesses</h2>
            <div class="business-action-container">
                <a href="/enter-business-details" class="business-add-details-button">
                    + Add Business
                </a>
            </div>
        </header>
        
        <main class="business-list-grid">
            <% if (registeredBusiness && registeredBusiness.length > 0) { %>
                <% registeredBusiness.forEach(business => { %>
                    <article class="business-card">
                        <div class="business-card-image-container">
                            <img src="<%= business.image_source || '/images/dummy/dummy business.jpeg' %>" 
                                 alt="<%= business.name %> Business Image" 
                                 class="business-card-image">
                        </div>
                
                        <div class="business-card-body">
                            <h3 class="business-card-title"><%= business.name %></h3>
                            <div class="business-card-details">
                                <p><strong>Business:</strong> <%= business.business_name %></p>
                                <p><strong>Category:</strong> <%= business.category_name %></p>
                                <p><strong>Phone:</strong> <%= business.phone %></p>
                                <p class="business-card-details-address-section"><strong>Address:</strong> <%= business.address %></p>
                                
                                <% if (business.website) { %>
                                    <p class="business-card-website">
                                        <strong>Website:</strong> 
                                        <a href="<%= business.website.startsWith('http') ? business.website : 'https://' + business.website %>" target="_blank">
                                            <%= business.website %>
                                        </a>
                                        
                                    </p>
                                <% } %>
                            </div>
                            
                            <div class="business-card-actions ">
                                <a href="/manage-business/<%= business.id %>" class=" universal-btn">Edit</a>
                                <form action="/manage-business/<%= business.id %>/delete" method="POST" onsubmit="return confirm('Are you sure you want to delete this business?');">
                                    <button type="submit" class="universal-btn-class" style="background:rgb(245, 28, 28)">Delete</button>
                                </form>
                            </div>
                            
                        </div>
                    </article>
                <% }); %>
            <% } else { %>
                <div class="no-business-found-container">
                    <p class="no-business-found-message">No registered businesses found.</p>
                    <a href="/enter-business-details" class="business-add-details-button">
                        Enter Business Details
                    </a>
                </div>
            <% } %>
        </main>
    </div>
</section>
<script>

document.addEventListener('DOMContentLoaded', () => {
    const daysValue = document.getElementById('days-value');
    const hoursValue = document.getElementById('hours-value');
    const minutesValue = document.getElementById('minutes-value');
    const secondsValue = document.getElementById('seconds-value');
    const daysDial = document.getElementById('days-dial');
    const hoursDial = document.getElementById('hours-dial');
    const minutesDial = document.getElementById('minutes-dial');
    const secondsDial = document.getElementById('seconds-dial');
    
    const totalDays = 180;
    const totalMs = totalDays * 24 * 60 * 60 * 1000; // 180 days in milliseconds
    const circumference = 282.74; // 2 * Ï€ * 45 (radius of circle)

    // Set a fixed start date
    const startDate = new Date("2025-03-18T00:00:00Z"); // Fixed start date (YYYY-MM-DD)
    const start = startDate;
    const end = new Date(start.getTime() + totalMs);

    function updateDials() {
        const now = new Date();
        const timeLeft = end - now;

        if (timeLeft <= 0) {
            daysValue.textContent = '0';
            hoursValue.textContent = '0';
            minutesValue.textContent = '0';
            secondsValue.textContent = '0';
            daysDial.style.strokeDashoffset = circumference;
            hoursDial.style.strokeDashoffset = circumference;
            minutesDial.style.strokeDashoffset = circumference;
            secondsDial.style.strokeDashoffset = circumference;
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        // Update values
        daysValue.textContent = days;
        hoursValue.textContent = hours;
        minutesValue.textContent = minutes;
        secondsValue.textContent = seconds;

        // Update dials with smooth progress
        daysDial.style.strokeDashoffset = circumference * (1 - days / totalDays);
        hoursDial.style.strokeDashoffset = circumference * (1 - hours / 24);
        minutesDial.style.strokeDashoffset = circumference * (1 - minutes / 60);
        secondsDial.style.strokeDashoffset = circumference * (1 - seconds / 60);
    }

    // Initial update and smooth animation loop
    updateDials();
    setInterval(updateDials, 1000);
});
    
    </script>
