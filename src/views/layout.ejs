<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Optional custom styles -->
    <style>
        html,
        body {
            height: 100%;
            margin: 0;
        }
        /* start right side nav*/
        .sidenav {
           height: 100%;
           width: 0;
           position: fixed;
           z-index: 1;
           top: 0;
           right: 0; /* Changed from 'left' to 'right' */
           background-color: #111;
           overflow-x: hidden;
           transition: 0.5s;
           padding-top: 20px;
         }
         
         .sidenav a {
           padding: 8px 8px 8px 32px;
           text-decoration: none;
           font-size: 25px;
           color: #818181;
           display: block;
           transition: 0.3s;
         }
         
         .sidenav a:hover {
           color: #f1f1f1;
         }
         
         .sidenav .closebtn {
           position: absolute;
           top: 0;
           left: 120px; /* Changed from 'right' to 'left' */
           font-size: 36px;
           margin-left: 50px;
         }
         
         @media screen and (max-height: 450px) {
           .sidenav {padding-top: 15px;}
           .sidenav a {font-size: 18px;}
         }
        /* endright side nav */
    </style>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="/responsive.css">



    <!--flaticon.css-->
    <!-- <link rel="stylesheet" href="assets/css/flaticon.css"> -->
    <!-- for api location -->
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places"></script>
    <!-- flaticon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <!-- slick.js -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css" />

    

</head>

<body> 
    <section class="top-area">
        <div class="header-area">
            <!-- Start Navigation -->
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="container mb-2 mt-2">
                    <a class="navbar-brand" href="/">Whose<span>Best</span></a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-menu"
                        aria-controls="navbar-menu" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>


                    <div class="input-search-container">
                        <form class="d-flex " action="/show-business" method="post">
                            <div class="input-group">
                                <input class="form-control me-2 location-input" type="text" placeholder="Enter Location"
                                    id="locationBox" name="location">
                                <!-- <div id="suggestions-box">
                                    <button>location</button>
                                </div> -->
                            </div>


                            <input class="form-control me-2" type="text" placeholder="Search..." id="searchBar"
                                name="business">



                            <button class="btn btn-primary d-flex align-items-center justify-content-center gap-1"
                                type="submit" id="searchBtn">
                                Search
                                <i data-feather="search" width="15" height="15"></i>
                            </button>
                        </form>


                    </div>

                    <div class="collapse navbar-collapse" id="navbar-menu">
                        <div class="container  text-center">
                            <label class="toggle-switch">
                                <input type="checkbox" id="evToggle" <%= toggle ? 'checked' : '' %>>
                                <span class="slider"></span>
                            </label>
                        </div>
                        <ul class="navbar-nav ms-auto">
                            <% if(user) {%>
                                <li class="nav-item">
                                    <a class="nav-link" href="/your-business/<%= user.id %>">Manage Business</a>

                                </li>
                                <!-- <li class="nav-item">
                                    <a class="nav-link" href="logout">Logout</a>
                                </li>
                                 -->

                                <!--  start right nav bar  -->
                                <div id="mySidenav" class="sidenav">
                                    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
                                    <!-- <li class="nav-item">
                                       <a class="nav-link" href="logout">Login</a>
                                    </li>  -->
                                    <li class="nav-item">
                                       <a class="nav-link" href="/logout">Logout</a>
                                    </li> 
                                    <li class="nav-item">
                                        <a class="nav-link" href="/edit">Edit</a>
                                    </li> 
                                  </div>
                                  
                                  <span style=" padding:5px;margin:13px;cursor:pointer;" class="btn btn-primary" onclick="openNav()">User&#9776;</span>
                                  
                                  <script>
                                  function openNav() {
                                    document.getElementById("mySidenav").style.width = "250px";
                                  }
                                  
                                  function closeNav() {
                                    document.getElementById("mySidenav").style.width = "0";
                                  }
                                  </script>
            
                               <!--end right bar  -->

                                

                                <% } else{ %>
                                    <li class="nav-item">
                                        <a class="nav-link" href="business-login">Free Listing</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="btn btn-primary " href="#" id="loginButton" data-bs-toggle="modal"
                                            data-bs-target="#loginModal">Login/Signup</a>
                                    </li>


                                    <% } %>
                        </ul>
                    </div>


                </div>
            </nav>
        </div>
    </section>
    <%- body %>

        <div class="container mt-4">

        </div>
        <!-- Login Modal -->
        <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="loginModalLabel">Enter Your Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="details-form">
                            <!-- Name -->
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                                <button id="sendOtpButton" type="button" onclick="sendOtpPopup()">Send OTP</button>
                            </div>

                            <!-- enter otp -->


                            <div id="verify-otp-box" class="mb-3 d-none">
                                <p>We have sent an OTP to <span id="otp-email"></span>
                                    <label for="otp">Enter OTP:</label>
                                    <input type="text" id="otp-pop" name="otp" required />
                                    <button type="button" onclick="verifyOtpPopup()">Verify</button>
                            </div>



                        </form>
                    </div>
                </div>
            </div>
        </div>

        


        <!-- Popper.js and Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
            integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
            crossorigin="anonymous"></script>

        <!-- Feather Icons -->
        <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
        <script>
            feather.replace();
        </script>

        <script>
            const locationInputs = document.querySelectorAll('.location-input');

            // Add event listener to each input field
            locationInputs.forEach(locationInput => {
                // Create the suggestions box
                const suggestionsBox = document.createElement('div');
                suggestionsBox.classList.add('suggestions-box');
                locationInput.parentNode.appendChild(suggestionsBox);

                // Create the "Get current location" button
                const getLocationBtn = document.createElement('button');
                getLocationBtn.textContent = "Get current location";
                getLocationBtn.classList.add('get-location-btn'); // Fix for adding class
                getLocationBtn.style.display = "none";

                getLocationBtn.addEventListener('click', async (e) => {
                    e.preventDefault(); // Prevent default button behavior (e.g., form submission)

                    if (!navigator.geolocation) {
                        alert('Geolocation is not supported by your browser.');
                        return;
                    }
                    console.log(navigator)

                    navigator.geolocation.getCurrentPosition(
                        (position) => {

                            const latitude = position.coords.latitude;
                            const longitude = position.coords.longitude;
                            console.log('Location accessed:', { latitude, longitude });
                            // You can use these coordinates to fetch location details or set input values
                            locationInput.value = `Lat: ${latitude}, Lng: ${longitude}`;
                        },
                        (error) => {
                            switch (error.code) {
                                case error.PERMISSION_DENIED:
                                    alert('Please allow location permission.');
                                    break;
                                case error.POSITION_UNAVAILABLE:
                                    alert('Location information is unavailable.');
                                    break;
                                case error.TIMEOUT:
                                    alert('Request to get location timed out.');
                                    break;
                                default:
                                    alert('An unknown error occurred while accessing location.');
                            }
                        }
                    );
                });


                // Append the button to the suggestions box initially
                suggestionsBox.appendChild(getLocationBtn);

                // Show the suggestions box and button when the input is focused
                locationInput.addEventListener('focus', () => {
                    suggestionsBox.style.display = 'block';
                    getLocationBtn.style.display = 'inline-block';
                });

                // Fetch and display suggestions on input
                locationInput.addEventListener('input', async () => {
                    const query = locationInput.value.trim();
                    if (query.length < 3) {
                        suggestionsBox.style.display = 'none'; // Hide if query is too short
                        clearSuggestions();
                        return;
                    }

                    try {
                        const response = await fetch(`/api/location?q=${encodeURIComponent(query)}`);
                        const suggestions = await response.json();
                        console.log('Suggestions:', suggestions); // Ensure the suggestions array has data

                        clearSuggestions(); // Clear previous suggestions while preserving the button

                        if (suggestions.length > 0) {
                            suggestionsBox.style.display = 'block'; // Show dropdown

                            suggestions.forEach(suggestion => {
                                const div = document.createElement('div');
                                div.textContent = suggestion.name;
                                div.classList.add('suggestion-item');
                                div.addEventListener('click', () => {
                                    locationInput.value = suggestion.name;
                                    console.log('Selected Location:', {
                                        name: suggestion.name,
                                        latitude: suggestion.lat,
                                        longitude: suggestion.lng,
                                    });
                                    suggestionsBox.style.display = 'none';
                                    clearSuggestions();
                                });
                                suggestionsBox.appendChild(div);
                            });
                        } else {
                            suggestionsBox.style.display = 'none'; // Hide if no suggestions
                        }
                    } catch (error) {
                        console.error('Error fetching suggestions:', error);
                    }
                });

                // Hide suggestions box when clicking outside
                document.addEventListener('click', (e) => {
                    if (!suggestionsBox.contains(e.target) && e.target !== locationInput) {
                        suggestionsBox.style.display = 'none';
                        clearSuggestions();
                    }
                });

                // Function to clear suggestions but preserve the button
                function clearSuggestions() {
                    suggestionsBox.innerHTML = '';
                    suggestionsBox.appendChild(getLocationBtn);
                }

            });

            // ṭoggle================================================

            document.getElementById('evToggle').addEventListener('change', function () {
                console.log("toggle function hit");
                const toggleValue = this.checked; // Get toggle value (true/false)

                // Send the value to the server using Fetch API or AJAX
                fetch('/update-toggle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ toggle: toggleValue }),
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Toggle updated:', data.message);
                        
                            window.location.reload();
                        
                    })
                    .catch(error => console.error('Error:', error));
            });



        </script>
       <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

        <script src="/main.js"></script>
 </body>

 </html>